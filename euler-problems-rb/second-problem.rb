#Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
#By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
#find the sum of the even-valued terms.

def fib_even(n)
	list_of_numbers = [1, 2]
	(n - list_of_numbers.length).times do
		new_fib_number = list_of_numbers[-1] + list_of_numbers[-2]
		list_of_numbers << new_fib_number
	end
	return list_of_numbers.select{ |e| e.even? }.reduce(:+)
end

puts fib_even(4000000)	













